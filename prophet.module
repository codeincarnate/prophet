<?php

/**
 * Implementation of hook_init().
 * 
 * Add in Cassandra thrift files and add configured servers.
 */
function prophet_init() {
  $GLOBALS['THRIFT_ROOT'] = drupal_get_path('module', 'prophet') . '/lib/thrift';
  require_once $GLOBALS['THRIFT_ROOT'].'/packages/cassandra/Cassandra.php';
  require_once $GLOBALS['THRIFT_ROOT'].'/packages/cassandra/cassandra_types.php';
  require_once $GLOBALS['THRIFT_ROOT'].'/transport/TSocket.php';
  require_once $GLOBALS['THRIFT_ROOT'].'/protocol/TBinaryProtocol.php';
  require_once $GLOBALS['THRIFT_ROOT'].'/transport/TFramedTransport.php';
  require_once $GLOBALS['THRIFT_ROOT'].'/transport/TBufferedTransport.php';

  // Open connection to Cassandra
  $socket = new TSocket('127.0.0.1','9160',TRUE);
  $transport = new TFramedTransport($socket);
  $client = new CassandraClient(new TBinaryProtocolAccelerated($transport));
  $transport->open();
  $GLOBALS['cassandra_client'] = $client;
  
  
}


/**
 * Implementation of hook_menu().
 */
function prophet_menu() {
  $items['admin/settings/prophet'] = array(
    'title' => 'Cassandra Settings',
    'description' => 'Change settings on Cassandra cluster and monitor cluster statistics.',
    'page callback' => 'prophet_admin_status',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'pages/admin.pages.inc',
  );

  $items['admin/settings/prophet/status'] = array(
    'title' => 'Cassandra Status',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

function _prophet_add_node($host, $port = '9160', $framed_transport = TRUE, $send_timeout = NULL, $recv_timeout = NULL, $persist = TRUE) {
  try {
    $socket = new TSocket(array($host), array($port), $persist);
    if ($send_timeout) {
      $socket->setSendTimeout($send_timeout);
    }

    if ($recv_timeout) {
      $socket->setRecvTimeout($recv_timeout);
    }

    if ($framed_transport) {
      $transport = new TFramedTransport($socket);
    }
    else {
      $transport = new TBufferedTransport($socket, 1024, 1024);
    }


    $client = new CassandraClient(new TBinaryProtocolAccelerated($transport));
    $transport->open();
  }
  catch (Exception $tx) {
    $replace = array(
      '@message' => $tx->getMessage(),
    );
    watchdog('prophet', 'A thrift error occured: <pre>@message</pre>', $replace, WATCHDOG_ERROR);
  }

  return $client;
}
